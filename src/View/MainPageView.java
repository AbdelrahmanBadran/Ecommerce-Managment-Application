/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;



import Controller.Category;
import Controller.Customer;
import Controller.FragileShipping;
import Controller.NonFragileShipping;
import Controller.Order;
import Controller.Total;
import Controller.Product;
import java.awt.Component;
import java.awt.Window;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 *
 */
@SuppressWarnings("serial")
public class MainPageView extends javax.swing.JFrame {
    //User loggedUser = new User();
    //Customer customer = new Customer();
   
   private DefaultTableModel booksTableModel = new DefaultTableModel();
   
   private DefaultTableModel sportsTableModel = new DefaultTableModel();
   private DefaultTableModel gamesTableModel = new DefaultTableModel();
   private DefaultTableModel electronicsTableModel = new DefaultTableModel();
   private DefaultTableModel searchTableModel = new DefaultTableModel();
   private DefaultTableModel cartTableModel = new DefaultTableModel();
   private DefaultTableModel historyTableModel = new DefaultTableModel();
 
   private TableRowSorter<TableModel> rowSorter;
   ProductInfo productInformation;
        
   private Product productController = new Product();
   private Customer loggedCustomer = new Customer();


    /**
     * Creates new form MainPageView
     */
    public MainPageView() {
//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        try {

            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainPageView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainPageView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainPageView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainPageView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
//</editor-fold>

        initComponents();
        loadName();
        populateTables();
         
         
        
         

    }
    
    public MainPageView(Customer loggedCustomer ){
        this.loggedCustomer = loggedCustomer;


//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        try {

            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainPageView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainPageView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainPageView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainPageView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
//</editor-fold>



           initComponents();
           loadName();
           populateTables();
           

    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        leftpanel = new javax.swing.JPanel();
        loggedInAsLbl = new javax.swing.JLabel();
        usernameLbl = new javax.swing.JLabel();
        fundslbl = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        accountButton = new javax.swing.JButton();
        cartBtn = new javax.swing.JButton();
        accountSettingsBtn = new javax.swing.JButton();
        historyBtn = new javax.swing.JButton();
        topUpBtn = new javax.swing.JButton();
        TopPanel = new javax.swing.JPanel();
        searchTxtFld = new javax.swing.JFormattedTextField();
        homepgtitlelbl = new javax.swing.JLabel();
        searchBtn = new javax.swing.JButton();
        categorypanel = new javax.swing.JPanel();
        Booksbtn = new javax.swing.JButton();
        sportEquipmentbtn = new javax.swing.JButton();
        electronicsbtn = new javax.swing.JButton();
        gamesbtn = new javax.swing.JButton();
        tableLayerPane = new javax.swing.JLayeredPane();
        booksPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        booksTable = new javax.swing.JTable();
        electronicsPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        electronicsTable = new javax.swing.JTable();
        gamesPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        gamesTable = new javax.swing.JTable();
        sportsPanel = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        sportsTable = new javax.swing.JTable();
        cartPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        cartTable = new javax.swing.JTable();
        orderLbl = new javax.swing.JLabel();
        orderPriceLbl = new javax.swing.JLabel();
        purchaseBtn = new javax.swing.JButton();
        currenyLbl = new javax.swing.JLabel();
        shippingFeeLbl = new javax.swing.JLabel();
        shippingPriceLbl = new javax.swing.JLabel();
        currenyLbl1 = new javax.swing.JLabel();
        clearBtn = new javax.swing.JButton();
        historyPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        orderHistoryTable = new javax.swing.JTable();
        searchPanel = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        searchTable = new javax.swing.JTable();
        outletPictureLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 0, 51));
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        leftpanel.setBackground(new java.awt.Color(51, 0, 51));

        loggedInAsLbl.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        loggedInAsLbl.setForeground(new java.awt.Color(255, 255, 255));
        loggedInAsLbl.setText("Logged in as:");

        usernameLbl.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        usernameLbl.setForeground(new java.awt.Color(255, 255, 255));
        usernameLbl.setText("Guest");

        fundslbl.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        fundslbl.setForeground(new java.awt.Color(255, 255, 255));
        fundslbl.setText("0.000");
        fundslbl.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                fundslblPropertyChange(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Your Funds:");

        accountButton.setBackground(new java.awt.Color(51, 0, 51));
        accountButton.setFont(new java.awt.Font("Roboto", 0, 20)); // NOI18N
        accountButton.setForeground(new java.awt.Color(255, 255, 255));
        accountButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProductImages/icons8_Person_48px.png"))); // NOI18N
        accountButton.setToolTipText("Account Info");
        accountButton.setBorderPainted(false);
        accountButton.setContentAreaFilled(false);
        accountButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        accountButton.setOpaque(true);
        accountButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                accountButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                accountButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                accountButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                accountButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                accountButtonMouseReleased(evt);
            }
        });
        accountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountButtonActionPerformed(evt);
            }
        });

        cartBtn.setBackground(new java.awt.Color(51, 0, 51));
        cartBtn.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        cartBtn.setForeground(new java.awt.Color(255, 255, 255));
        cartBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProductImages/icons8-buying-48.png"))); // NOI18N
        cartBtn.setText("Cart");
        cartBtn.setBorderPainted(false);
        cartBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cartBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        cartBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cartBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cartBtnMouseExited(evt);
            }
        });
        cartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cartBtnActionPerformed(evt);
            }
        });

        accountSettingsBtn.setBackground(new java.awt.Color(51, 0, 51));
        accountSettingsBtn.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        accountSettingsBtn.setForeground(new java.awt.Color(255, 255, 255));
        accountSettingsBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProductImages/icons8-administrative-tools-48.png"))); // NOI18N
        accountSettingsBtn.setText("Account");
        accountSettingsBtn.setBorderPainted(false);
        accountSettingsBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        accountSettingsBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        accountSettingsBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                accountSettingsBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                accountSettingsBtnMouseExited(evt);
            }
        });
        accountSettingsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountSettingsBtnActionPerformed(evt);
            }
        });

        historyBtn.setBackground(new java.awt.Color(51, 0, 51));
        historyBtn.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        historyBtn.setForeground(new java.awt.Color(255, 255, 255));
        historyBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProductImages/icons8-moleskine-48.png"))); // NOI18N
        historyBtn.setText("History");
        historyBtn.setBorderPainted(false);
        historyBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        historyBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        historyBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                historyBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                historyBtnMouseExited(evt);
            }
        });
        historyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                historyBtnActionPerformed(evt);
            }
        });

        topUpBtn.setBackground(new java.awt.Color(51, 0, 51));
        topUpBtn.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        topUpBtn.setForeground(new java.awt.Color(255, 255, 255));
        topUpBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProductImages/icons8-cash-48.png"))); // NOI18N
        topUpBtn.setText(" Top Up");
        topUpBtn.setBorderPainted(false);
        topUpBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        topUpBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        topUpBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                topUpBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                topUpBtnMouseExited(evt);
            }
        });
        topUpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topUpBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout leftpanelLayout = new javax.swing.GroupLayout(leftpanel);
        leftpanel.setLayout(leftpanelLayout);
        leftpanelLayout.setHorizontalGroup(
            leftpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftpanelLayout.createSequentialGroup()
                .addGroup(leftpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(leftpanelLayout.createSequentialGroup()
                        .addGroup(leftpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cartBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(historyBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(leftpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(accountButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, leftpanelLayout.createSequentialGroup()
                                    .addGap(25, 25, 25)
                                    .addGroup(leftpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(usernameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4)
                                        .addComponent(fundslbl, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(loggedInAsLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, leftpanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(accountSettingsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                    .addComponent(topUpBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        leftpanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {accountSettingsBtn, cartBtn, historyBtn});

        leftpanelLayout.setVerticalGroup(
            leftpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftpanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(accountButton, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loggedInAsLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usernameLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fundslbl)
                .addGap(9, 9, 9)
                .addComponent(cartBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(historyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(topUpBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addComponent(accountSettingsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        leftpanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {accountSettingsBtn, cartBtn, historyBtn});

        getContentPane().add(leftpanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, 170, 600));

        TopPanel.setBackground(new java.awt.Color(51, 0, 51));

        searchTxtFld.setToolTipText("Type product name to search");
        searchTxtFld.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        searchTxtFld.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchTxtFldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchTxtFldFocusLost(evt);
            }
        });

        homepgtitlelbl.setBackground(new java.awt.Color(51, 0, 51));
        homepgtitlelbl.setFont(new java.awt.Font("Minion Pro", 1, 36)); // NOI18N
        homepgtitlelbl.setForeground(new java.awt.Color(255, 102, 0));
        homepgtitlelbl.setText("Onine Shopping");
        homepgtitlelbl.setName(""); // NOI18N

        searchBtn.setBackground(new java.awt.Color(51, 0, 51));
        searchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProductImages/icons8-search-filled-30 (1).png"))); // NOI18N
        searchBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TopPanelLayout = new javax.swing.GroupLayout(TopPanel);
        TopPanel.setLayout(TopPanelLayout);
        TopPanelLayout.setHorizontalGroup(
            TopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TopPanelLayout.createSequentialGroup()
                .addContainerGap(424, Short.MAX_VALUE)
                .addComponent(homepgtitlelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addComponent(searchTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(103, 103, 103))
        );
        TopPanelLayout.setVerticalGroup(
            TopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TopPanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(homepgtitlelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(TopPanelLayout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addGroup(TopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchTxtFld, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        TopPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {searchBtn, searchTxtFld});

        getContentPane().add(TopPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(166, 0, 1260, -1));

        categorypanel.setBackground(new java.awt.Color(51, 0, 51));

        Booksbtn.setBackground(new java.awt.Color(51, 0, 51));
        Booksbtn.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        Booksbtn.setForeground(new java.awt.Color(255, 255, 255));
        Booksbtn.setText("BOOKS");
        Booksbtn.setBorder(null);
        Booksbtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Booksbtn.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                BooksbtnMouseDragged(evt);
            }
        });
        Booksbtn.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                BooksbtnFocusGained(evt);
            }
        });
        Booksbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BooksbtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BooksbtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BooksbtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BooksbtnMousePressed(evt);
            }
        });
        Booksbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BooksbtnActionPerformed(evt);
            }
        });

        sportEquipmentbtn.setBackground(new java.awt.Color(51, 0, 51));
        sportEquipmentbtn.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        sportEquipmentbtn.setForeground(new java.awt.Color(255, 255, 255));
        sportEquipmentbtn.setText("SPORTS EQUPMENT");
        sportEquipmentbtn.setBorder(null);
        sportEquipmentbtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sportEquipmentbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                sportEquipmentbtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                sportEquipmentbtnMouseExited(evt);
            }
        });
        sportEquipmentbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sportEquipmentbtnActionPerformed(evt);
            }
        });

        electronicsbtn.setBackground(new java.awt.Color(51, 0, 51));
        electronicsbtn.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        electronicsbtn.setForeground(new java.awt.Color(255, 255, 255));
        electronicsbtn.setText("ELECTTRONICS");
        electronicsbtn.setBorder(null);
        electronicsbtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        electronicsbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                electronicsbtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                electronicsbtnMouseExited(evt);
            }
        });
        electronicsbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                electronicsbtnActionPerformed(evt);
            }
        });

        gamesbtn.setBackground(new java.awt.Color(51, 0, 51));
        gamesbtn.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        gamesbtn.setForeground(new java.awt.Color(255, 255, 255));
        gamesbtn.setText("GAMES & TOYS");
        gamesbtn.setBorder(null);
        gamesbtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        gamesbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                gamesbtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                gamesbtnMouseExited(evt);
            }
        });
        gamesbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gamesbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout categorypanelLayout = new javax.swing.GroupLayout(categorypanel);
        categorypanel.setLayout(categorypanelLayout);
        categorypanelLayout.setHorizontalGroup(
            categorypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(categorypanelLayout.createSequentialGroup()
                .addComponent(Booksbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(electronicsbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(gamesbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(sportEquipmentbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        categorypanelLayout.setVerticalGroup(
            categorypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sportEquipmentbtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(electronicsbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
            .addComponent(Booksbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(gamesbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(categorypanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(166, 101, 1260, 70));

        tableLayerPane.setLayout(new java.awt.CardLayout());

        booksTable.setAutoCreateRowSorter(true);
        booksTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Description", "Price", "Stock", "Image"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        booksTable.getTableHeader().setReorderingAllowed(false);
        booksTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                booksTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(booksTable);

        javax.swing.GroupLayout booksPanelLayout = new javax.swing.GroupLayout(booksPanel);
        booksPanel.setLayout(booksPanelLayout);
        booksPanelLayout.setHorizontalGroup(
            booksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1268, Short.MAX_VALUE)
        );
        booksPanelLayout.setVerticalGroup(
            booksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );

        tableLayerPane.add(booksPanel, "card2");

        electronicsTable.setAutoCreateRowSorter(true);
        electronicsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Description", "Price", "Stock", "Image"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        electronicsTable.getTableHeader().setReorderingAllowed(false);
        electronicsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                electronicsTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(electronicsTable);

        javax.swing.GroupLayout electronicsPanelLayout = new javax.swing.GroupLayout(electronicsPanel);
        electronicsPanel.setLayout(electronicsPanelLayout);
        electronicsPanelLayout.setHorizontalGroup(
            electronicsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(electronicsPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        electronicsPanelLayout.setVerticalGroup(
            electronicsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );

        tableLayerPane.add(electronicsPanel, "card3");

        gamesTable.setAutoCreateRowSorter(true);
        gamesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Description", "Price", "Stock", "Image"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gamesTable.getTableHeader().setReorderingAllowed(false);
        gamesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gamesTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(gamesTable);

        javax.swing.GroupLayout gamesPanelLayout = new javax.swing.GroupLayout(gamesPanel);
        gamesPanel.setLayout(gamesPanelLayout);
        gamesPanelLayout.setHorizontalGroup(
            gamesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gamesPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 1268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        gamesPanelLayout.setVerticalGroup(
            gamesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );

        tableLayerPane.add(gamesPanel, "card4");

        sportsTable.setAutoCreateRowSorter(true);
        sportsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Description", "Price", "Stock", "Image"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        sportsTable.getTableHeader().setReorderingAllowed(false);
        sportsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sportsTableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(sportsTable);

        javax.swing.GroupLayout sportsPanelLayout = new javax.swing.GroupLayout(sportsPanel);
        sportsPanel.setLayout(sportsPanelLayout);
        sportsPanelLayout.setHorizontalGroup(
            sportsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 1268, Short.MAX_VALUE)
        );
        sportsPanelLayout.setVerticalGroup(
            sportsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );

        tableLayerPane.add(sportsPanel, "card5");

        cartPanel.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        cartTable.setAutoCreateRowSorter(true);
        cartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Price", "Quantity", "Packaging", "SubTotal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        cartTable.getTableHeader().setReorderingAllowed(false);
        cartTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cartTableMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(cartTable);

        orderLbl.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        orderLbl.setText("Order Total:");

        orderPriceLbl.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        orderPriceLbl.setText("000.000");

        purchaseBtn.setBackground(new java.awt.Color(0, 204, 51));
        purchaseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProductImages/icons8_Buy_24px.png"))); // NOI18N
        purchaseBtn.setText("Purchase");
        purchaseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchaseBtnActionPerformed(evt);
            }
        });

        currenyLbl.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        currenyLbl.setText("RM");

        shippingFeeLbl.setFont(new java.awt.Font("DialogInput", 0, 14)); // NOI18N
        shippingFeeLbl.setText("Shipping fee:");

        shippingPriceLbl.setFont(new java.awt.Font("DialogInput", 0, 14)); // NOI18N

        currenyLbl1.setFont(new java.awt.Font("DialogInput", 0, 14)); // NOI18N
        currenyLbl1.setText("RM");

        clearBtn.setBackground(new java.awt.Color(255, 153, 0));
        clearBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProductImages/icons8_Delete_24px.png"))); // NOI18N
        clearBtn.setText("Clear Cart");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(274, 274, 274)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(shippingFeeLbl)
                    .addComponent(orderLbl))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(orderPriceLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(currenyLbl))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(shippingPriceLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(currenyLbl1)))
                .addGap(57, 57, 57)
                .addComponent(purchaseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(shippingFeeLbl)
                            .addComponent(shippingPriceLbl)
                            .addComponent(currenyLbl1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(orderLbl)
                            .addComponent(orderPriceLbl)
                            .addComponent(currenyLbl))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(purchaseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20))))
        );

        javax.swing.GroupLayout cartPanelLayout = new javax.swing.GroupLayout(cartPanel);
        cartPanel.setLayout(cartPanelLayout);
        cartPanelLayout.setHorizontalGroup(
            cartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cartPanelLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        cartPanelLayout.setVerticalGroup(
            cartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cartPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        tableLayerPane.add(cartPanel, "card6");

        orderHistoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "OrderID", "Items", "Total", "Status", "OrderDate"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        orderHistoryTable.getTableHeader().setReorderingAllowed(false);
        orderHistoryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orderHistoryTableMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(orderHistoryTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 1250, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout historyPanelLayout = new javax.swing.GroupLayout(historyPanel);
        historyPanel.setLayout(historyPanelLayout);
        historyPanelLayout.setHorizontalGroup(
            historyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        historyPanelLayout.setVerticalGroup(
            historyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tableLayerPane.add(historyPanel, "card7");

        searchTable.setAutoCreateRowSorter(true);
        searchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Description", "Price", "Stock", "Image"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        searchTable.getTableHeader().setReorderingAllowed(false);
        searchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchTableMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(searchTable);

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 1268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );

        tableLayerPane.add(searchPanel, "card3");

        getContentPane().add(tableLayerPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 170, 1250, 600));

        outletPictureLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProductImages/modern-outlet-composition-with-flat-design_23-2147955616.jpg"))); // NOI18N
        getContentPane().add(outletPictureLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 170, 170));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

     //changes colour whwn mouse hover

  private void changeBtnOnHover(JButton j){
        j.setBackground(new java.awt.Color(255,102,0));
   }
    private void changeBtnOnHoverExit(JButton j ){
        j.setBackground(new java.awt.Color(51,0,51));
    }

    public void populateTables(){
        
           booksTableModel = (DefaultTableModel) booksTable.getModel(); 
           
           
           productController.populateBooksTable(booksTableModel, booksTable);
           
        
        sportsTableModel = (DefaultTableModel) sportsTable.getModel();
        productController.populateSportsTable(sportsTableModel,sportsTable);
        
        gamesTableModel = (DefaultTableModel) gamesTable.getModel();
        productController.populateGamesTable(gamesTableModel,gamesTable);
        
        
        electronicsTableModel = (DefaultTableModel) electronicsTable.getModel();
        productController.populateElectronicsTable(electronicsTableModel,electronicsTable);
        
        historyTableModel = (DefaultTableModel) orderHistoryTable.getModel();
        
        if (loggedCustomer.getSignInStatus()) {
            Order orderController = new Order();
            orderController.populateHistoryTable(historyTableModel,loggedCustomer.getName(), orderHistoryTable);
        }
        
         searchTableModel = (DefaultTableModel) searchTable.getModel();
        productController.populateSearchTable(searchTableModel,searchTable);
        
        ListnerHandler searchListner = new ListnerHandler();
        searchTable.getSelectionModel().addListSelectionListener(searchListner);
        
        cartTableModel = (DefaultTableModel) cartTable.getModel();
    }
    
     public void setPanelsVisibilityFalse(){
        sportsPanel.setVisible(false); 
        gamesPanel.setVisible(false);
       booksPanel.setVisible(false); 
       historyPanel.setVisible(false);
        cartPanel.setVisible(false);
        searchPanel.setVisible(false);
        electronicsPanel.setVisible(false);
    }
    
    public void search(){

       rowSorter = new TableRowSorter<>(searchTable.getModel());
       searchTable.setRowSorter(rowSorter);
       String text = searchTxtFld.getText();
        if(text.length()!=0){
           rowSorter.setRowFilter(RowFilter.regexFilter(searchTxtFld.getText(),0));
       }
       else{
            
           rowSorter.setRowFilter(null);
    }
    }
        
            //not used code below . trial for not having a seperate search table
//       for (JTable tablesArray1 : tablesArray) {
//           rowSorter = new TableRowSorter<>(tablesArray1.getModel());
//           tablesArray1.setRowSorter(rowSorter);
//           String text = searchTxtFld.getText();
//           if(text.length()!=0){
//
//               
//               rowSorter.setRowFilter(RowFilter.regexFilter(searchTxtFld.getText(),0));
//               
//               
//               
//               
//           }
//           else{
//               rowSorter.setRowFilter(null);
//       }
//     }          
     
    public void loadName(){
          if(loggedCustomer.getSignInStatus())
        {
            usernameLbl.setText(loggedCustomer.getName());
           String funds = String.valueOf(loggedCustomer.getFunds());
           fundslbl.setText(funds);

        }
        else {
              usernameLbl.setText("Guest");
          }
    }



    private void accountButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accountButtonMouseClicked

    }//GEN-LAST:event_accountButtonMouseClicked

    private void accountButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accountButtonMouseEntered

    }//GEN-LAST:event_accountButtonMouseEntered

    private void accountButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accountButtonMouseExited


    }//GEN-LAST:event_accountButtonMouseExited

    private void accountButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accountButtonMousePressed

    }//GEN-LAST:event_accountButtonMousePressed

    private void accountButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accountButtonMouseReleased

    }//GEN-LAST:event_accountButtonMouseReleased

    private void accountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountButtonActionPerformed
        if (usernameLbl.getText().equals("Guest")) {
            Login nextFrame = new Login();
            nextFrame.setVisible(true);
            this.dispose();
        }
        else{
            LogOutUser logOut = new LogOutUser(this, true, loggedCustomer);
            //LogOut logoutframe = new LogOut(loggedCustomer);
            logOut.setVisible(true);

        }

    }//GEN-LAST:event_accountButtonActionPerformed
   
    private void cartTableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cartTableMouseEntered

    }//GEN-LAST:event_cartTableMouseEntered

    private void cartBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cartBtnMouseEntered
        changeBtnOnHover(cartBtn);
    }//GEN-LAST:event_cartBtnMouseEntered

    private void cartBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cartBtnMouseExited
        changeBtnOnHoverExit(cartBtn);
    }//GEN-LAST:event_cartBtnMouseExited

    private void accountSettingsBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accountSettingsBtnMouseEntered
        changeBtnOnHover(accountSettingsBtn);
    }//GEN-LAST:event_accountSettingsBtnMouseEntered

    private void accountSettingsBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accountSettingsBtnMouseExited
        changeBtnOnHoverExit(accountSettingsBtn);
    }//GEN-LAST:event_accountSettingsBtnMouseExited

    private void BooksbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BooksbtnActionPerformed
       setPanelsVisibilityFalse();
        booksPanel.setVisible(true);

    }//GEN-LAST:event_BooksbtnActionPerformed

    private void BooksbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BooksbtnMouseExited
        changeBtnOnHoverExit(Booksbtn);

    }//GEN-LAST:event_BooksbtnMouseExited

    private void BooksbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BooksbtnMouseEntered
        changeBtnOnHover(Booksbtn);

    }//GEN-LAST:event_BooksbtnMouseEntered

    private void BooksbtnMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BooksbtnMouseDragged

    }//GEN-LAST:event_BooksbtnMouseDragged

    private void sportEquipmentbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sportEquipmentbtnActionPerformed
        setPanelsVisibilityFalse();
        sportsPanel.setVisible(true);
    }//GEN-LAST:event_sportEquipmentbtnActionPerformed

    private void sportEquipmentbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sportEquipmentbtnMouseExited
        changeBtnOnHoverExit(sportEquipmentbtn);
    }//GEN-LAST:event_sportEquipmentbtnMouseExited

    private void sportEquipmentbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sportEquipmentbtnMouseEntered
        changeBtnOnHover(sportEquipmentbtn);
    }//GEN-LAST:event_sportEquipmentbtnMouseEntered

    private void gamesbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gamesbtnActionPerformed
        setPanelsVisibilityFalse();
        gamesPanel.setVisible(true);
    }//GEN-LAST:event_gamesbtnActionPerformed

    private void gamesbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gamesbtnMouseExited
        changeBtnOnHoverExit(gamesbtn);
    }//GEN-LAST:event_gamesbtnMouseExited

    private void gamesbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gamesbtnMouseEntered
        changeBtnOnHover(gamesbtn);
    }//GEN-LAST:event_gamesbtnMouseEntered

    private void electronicsbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_electronicsbtnActionPerformed
        setPanelsVisibilityFalse();
        electronicsPanel.setVisible(true);
    }//GEN-LAST:event_electronicsbtnActionPerformed

    private void electronicsbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_electronicsbtnMouseExited
        changeBtnOnHoverExit(electronicsbtn);
    }//GEN-LAST:event_electronicsbtnMouseExited

    private void electronicsbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_electronicsbtnMouseEntered
        changeBtnOnHover(electronicsbtn);
    }//GEN-LAST:event_electronicsbtnMouseEntered

    private void purchaseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchaseBtnActionPerformed
        if (usernameLbl.getText().equals("Guest")) {
            JOptionPane.showMessageDialog(null, "You need to Login to purchase");
            
        } else {
            try {
                Order order = new Order();
                order.sufficientFunds(loggedCustomer, orderTotal);
                if (order.isEnoughFunds()) {
                    if (cartProducts.size() == 0) {
                        JOptionPane.showMessageDialog(null, "The cart is empty.");
                    }else{
                        
                        //order.updateItemQuantity(cartProducts);
                        order.updateItemQuantity(cartProducts);//updates quantity and writes the order to file
                        JOptionPane.showMessageDialog(null, "Your Order has been placed succesfully ");
  
                      this.dispose();
                      MainPageView updateView = new MainPageView(loggedCustomer);
                      clearCart();  
                      updateView.setVisible(true);
                    }
                    
                    
                }
            } catch (IOException ex) {
                Logger.getLogger(MainPageView.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_purchaseBtnActionPerformed

    private void historyBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_historyBtnMouseEntered
        changeBtnOnHover(historyBtn);
    }//GEN-LAST:event_historyBtnMouseEntered

    private void historyBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_historyBtnMouseExited
        changeBtnOnHoverExit(historyBtn);
    }//GEN-LAST:event_historyBtnMouseExited

    private void historyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_historyBtnActionPerformed
         if (usernameLbl.getText().equals("Guest")){
            JOptionPane.showMessageDialog(null, "You need to Login first");
        }
        else{
             setPanelsVisibilityFalse();
             historyPanel.setVisible(true);
             JOptionPane.showMessageDialog(null, "\tYou can only view the receipt for Accepted orders. \n\tYou can cancel an order if it hasnt been reviwed", "Tip", JOptionPane.INFORMATION_MESSAGE);
             
             
         }
    }//GEN-LAST:event_historyBtnActionPerformed

    private void searchTxtFldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTxtFldFocusGained
        //searchTxtFld.setText("");
    }//GEN-LAST:event_searchTxtFldFocusGained

    private void searchTxtFldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTxtFldFocusLost
       //searchTxtFld.setText("Product Name");
    }//GEN-LAST:event_searchTxtFldFocusLost

    private void accountSettingsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountSettingsBtnActionPerformed
        if (usernameLbl.getText().equals("Guest")){
            JOptionPane.showMessageDialog(null, "You need to Login first");
        }
        else{
            CustomerAccountSettings accountFrame = new CustomerAccountSettings(this, true, loggedCustomer);
            accountFrame.setVisible(true);
        }
    }//GEN-LAST:event_accountSettingsBtnActionPerformed

    private void topUpBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_topUpBtnMouseEntered
        changeBtnOnHover(topUpBtn);     
    }//GEN-LAST:event_topUpBtnMouseEntered

    private void topUpBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_topUpBtnMouseExited
        changeBtnOnHoverExit(topUpBtn); 
    }//GEN-LAST:event_topUpBtnMouseExited

    private void topUpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topUpBtnActionPerformed
          if (usernameLbl.getText().equals("Guest")) {
            JOptionPane.showMessageDialog(null, "You need to Login to Top UP");
        }
        else{
            TopUpFunds topUpFrame = new TopUpFunds(this, true, loggedCustomer);
            this.dispose();
            topUpFrame.setVisible(true);

        }

    }//GEN-LAST:event_topUpBtnActionPerformed

    private void fundslblPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_fundslblPropertyChange
                   
                       fundslbl.setText(Double.toString(loggedCustomer.getFunds()));
                   
    }//GEN-LAST:event_fundslblPropertyChange

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        loadName();
    }//GEN-LAST:event_formFocusGained

    private void BooksbtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BooksbtnMousePressed
     
    }//GEN-LAST:event_BooksbtnMousePressed

    private void BooksbtnFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BooksbtnFocusGained
       
    }//GEN-LAST:event_BooksbtnFocusGained

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
       setPanelsVisibilityFalse();
        searchPanel.setVisible(true);
        search();
       
    }//GEN-LAST:event_searchBtnActionPerformed

    
    //<---------------------------------Start of code for clicking a row in the tables
    private void booksTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_booksTableMouseClicked
        int index = booksTable.getSelectedRow();
        String name = booksTableModel.getValueAt(index, 0).toString();
        Product selectedProduct;
        selectedProduct = productController.searchProductInformation(name);
        //String description =booksTableModel.getValueAt(index, 1).toString();
        //String price = booksTableModel.getValueAt(index, 2).toString();
        //String stock = booksTableModel.getValueAt(index, 3).toString();
        //String category = Category.BOOKS.toString();
        //String packaging = selectedProduct.getPackaging();
        //String rating = Integer.toString(selectedProduct.getRating());
        productInformation = new ProductInfo(selectedProduct);
        productInformation.setVisible(true);
    }//GEN-LAST:event_booksTableMouseClicked

    private void electronicsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_electronicsTableMouseClicked
        int index = electronicsTable.getSelectedRow();
        String name = electronicsTableModel.getValueAt(index, 0).toString();
        Product selectedProduct;
        selectedProduct = productController.searchProductInformation(name);
        productInformation = new ProductInfo(selectedProduct);
        productInformation.setVisible(true);
    }//GEN-LAST:event_electronicsTableMouseClicked

    private void gamesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gamesTableMouseClicked
        int index = gamesTable.getSelectedRow();
        String name = gamesTableModel.getValueAt(index, 0).toString();
        Product selectedProduct;
        selectedProduct = productController.searchProductInformation(name);
        productInformation = new ProductInfo(selectedProduct);
        productInformation.setVisible(true);
    }//GEN-LAST:event_gamesTableMouseClicked

    private void sportsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sportsTableMouseClicked
        int index = sportsTable.getSelectedRow();
        String name = sportsTableModel.getValueAt(index, 0).toString();
        Product selectedProduct;
        selectedProduct = productController.searchProductInformation(name);
        productInformation = new ProductInfo(selectedProduct);
        productInformation.setVisible(true);
    }//GEN-LAST:event_sportsTableMouseClicked
    
    public int getRowByValue(TableModel model, String value) {
        int num = -1 ;
        label1:   
    for (int i = model.getRowCount() - 1; i >= 0; --i) {
        for (int j = model.getColumnCount() - 1; j >= 0; --j) {
            if (model.getValueAt(i, j).toString().contains(value)) {
                // what if value is not unique?
                
                num = i;
                break label1;
                //return i;
            }
        }
    }
    return num;
 }
    //trial solution for if two products are found during search
//    public List<Integer> getRowIndexesOfValue(String value, JTable table) {
//
//   List<Integer> rowNumbers = new ArrayList<>();
//   
//
//   for(int rowCount = 0; rowCount < table.getRowCount(); rowCount++) {
//      for(int columnCount = 0; columnCount < table.getColumnCount(); columnCount++) {
//          if(table.getValueAt(rowCount, columnCount).toString().contains(value) ) {
//             rowNumbers.add(rowCount);
//             System.out.println(rowNumbers);
//             break;  
//             
//          }
//       }
//    }
//    return rowNumbers;
//}
    
    private void searchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchTableMouseClicked
       // int index;
        
        //int  index = searchTable.getSelectedRow();
       
//        if (searchTxtFld.getText().equals("")){
//            index = searchTable.getSelectedRow();
//        }else{   
//           search();
//          
//         index = getRowByValue(searchTableModel, searchTxtFld.getText());         
//        }        
//        //search();
//        String name = searchTableModel.getValueAt(index, 0).toString();
//        Product selectedProduct;
//        selectedProduct = productController.searchProductInformation(name);
//        productInformation = new ProductInfo(selectedProduct);
//        productInformation.setVisible(true);

        // an inner class of handling product selection when searched

//        String name = searchTable.getValueAt(searchTable.getSelectedRow(), 0).toString();
//        Product selectedP = productController.searchProductInformation(name);
//        ProductInfo productInformation = new ProductInfo(selectedP);
        productInformation.setVisible(true);
        
        //
        
    }//GEN-LAST:event_searchTableMouseClicked
     
   
       
        
    private void BooksbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BooksbtnMouseClicked
        
    }//GEN-LAST:event_BooksbtnMouseClicked
    private  static ArrayList<Product> cartProducts;
    private double orderTotal = 0.00;
    
    private void cartBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cartBtnActionPerformed
      
        setPanelsVisibilityFalse();
        cartTableModel.setRowCount(0);
        cartPanel.setVisible(true);
        double packagingPrice = 0.00;
        Total payment = new Total();
        
        String packaging = "";
       ProductInfo productInfoFrame = new ProductInfo();
       cartProducts =  productInfoFrame.getCartItems();
       
       //loop every Product of our cartProduct list
       for (int i = 0; i < cartProducts.size(); i++){
           String name = cartProducts.get(i).getName();
           double price = cartProducts.get(i).getPrice();
           int quantity = cartProducts.get(i).getOrderQuantity();
           packaging = cartProducts.get(i).getPackaging();
           String previousQuantity;
   
            //check if item already exists
            int rowIndex = getRowByValue(cartTableModel, name);
            if (rowIndex != -1){
                
                previousQuantity = cartTableModel.getValueAt(rowIndex,2).toString();
                quantity+= Integer.parseInt(previousQuantity);
                cartTableModel.removeRow(rowIndex); 
                
            }
             double subTotal = payment.calculateSubTotal(price, quantity);

            Object [] data = {name,price, quantity, packaging, subTotal};
            cartTableModel.addRow(data);
 
       }
            
        FragileShipping fragileShipping = new FragileShipping();
        NonFragileShipping nonFragileShipping = new NonFragileShipping();

        String addressToShip = "";
       addressToShip = usernameLbl.getText().equals("Guest") ? "Kuala Lumpur" : addressToShip;
       
         switch (packaging){
               case "Fragile": packagingPrice = fragileShipping.calculateShippingCost(cartTable, addressToShip);
                                            break;
               case "Non-Fragile": packagingPrice = nonFragileShipping.calculateShippingCost(cartTable, addressToShip);

           }
     
       shippingPriceLbl.setText(Double.toString(packagingPrice));
        
        orderTotal = payment.calculateOrderGrandTotal(cartTable, packagingPrice);
        orderPriceLbl.setText(Double.toString(orderTotal));

    }//GEN-LAST:event_cartBtnActionPerformed
    

  public void clearCart(){
      int rowCount = cartTableModel.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            cartTableModel.removeRow(i);   
        }
        cartProducts.clear();
        shippingPriceLbl.setText(Double.toString(0.00));
  }
    
    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        clearCart();
        
    }//GEN-LAST:event_clearBtnActionPerformed

    private void orderHistoryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderHistoryTableMouseClicked
        int index = orderHistoryTable.getSelectedRow();
        String status = historyTableModel.getValueAt(index, 3).toString();
        
        
        if (status.equals("Accepted")) {
            int orderID = (int) historyTableModel.getValueAt(index, 0);
            String products = historyTableModel.getValueAt(index, 1).toString();
            double total =(double) historyTableModel.getValueAt(index, 2);
            String date = historyTableModel.getValueAt(index, 4).toString();
            Receipt receipt = new Receipt(this, true, orderID,products,total,loggedCustomer.getName(),loggedCustomer.getId(),loggedCustomer.getAddress(),date);  
           receipt.setVisible(true);
        }
        else if (status.equals("Not Reviewed")) {
           int dialogResult = JOptionPane.showConfirmDialog(historyPanel, "Do you want to cancel this Order?");
           if (dialogResult == JOptionPane.YES_OPTION){
               int orderID =  (int)historyTableModel.getValueAt(index, 0);
               Order order = new Order();
               order.deleteOrderwithID(orderID);
               JOptionPane.showMessageDialog(null, "Your order has been canceled");
               
              System.gc();
            Window win [] = Window.getWindows();
            for (Window win1 : win) {
                win1.dispose();
            }
              MainPageView updateView = new MainPageView(loggedCustomer);
               updateView.setVisible(true);
               
               
           }
        }
        else{
            JOptionPane.showMessageDialog(null, "You can only view the receipt for Accepted orders");
        }
    }//GEN-LAST:event_orderHistoryTableMouseClicked
    


    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Booksbtn;
    private javax.swing.JPanel TopPanel;
    private javax.swing.JButton accountButton;
    private javax.swing.JButton accountSettingsBtn;
    private javax.swing.JPanel booksPanel;
    private javax.swing.JTable booksTable;
    private javax.swing.JButton cartBtn;
    private javax.swing.JPanel cartPanel;
    private javax.swing.JTable cartTable;
    private javax.swing.JPanel categorypanel;
    private javax.swing.JButton clearBtn;
    private javax.swing.JLabel currenyLbl;
    private javax.swing.JLabel currenyLbl1;
    private javax.swing.JPanel electronicsPanel;
    private javax.swing.JTable electronicsTable;
    private javax.swing.JButton electronicsbtn;
    private javax.swing.JLabel fundslbl;
    private javax.swing.JPanel gamesPanel;
    private javax.swing.JTable gamesTable;
    private javax.swing.JButton gamesbtn;
    private javax.swing.JButton historyBtn;
    private javax.swing.JPanel historyPanel;
    private javax.swing.JLabel homepgtitlelbl;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JPanel leftpanel;
    private javax.swing.JLabel loggedInAsLbl;
    private javax.swing.JTable orderHistoryTable;
    private javax.swing.JLabel orderLbl;
    private javax.swing.JLabel orderPriceLbl;
    private javax.swing.JLabel outletPictureLbl;
    private javax.swing.JButton purchaseBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JTable searchTable;
    private javax.swing.JFormattedTextField searchTxtFld;
    private javax.swing.JLabel shippingFeeLbl;
    private javax.swing.JLabel shippingPriceLbl;
    private javax.swing.JButton sportEquipmentbtn;
    private javax.swing.JPanel sportsPanel;
    private javax.swing.JTable sportsTable;
    private javax.swing.JLayeredPane tableLayerPane;
    private javax.swing.JButton topUpBtn;
    private javax.swing.JLabel usernameLbl;
    // End of variables declaration//GEN-END:variables

  
     private class ListnerHandler implements ListSelectionListener{
     @Override
     public void valueChanged(ListSelectionEvent event) {
            // do some actions here, for example
            // print first column value from selected row
           if(searchTable.getSelectedRow() != -1){
               String name = searchTable.getValueAt(searchTable.getSelectedRow(), 0).toString();
                Product selectedProduct;
                selectedProduct = productController.searchProductInformation(name);
                productInformation = new ProductInfo(selectedProduct);
                
           }
        }
}

    
}



