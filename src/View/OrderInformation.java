/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.Customer;
import Controller.Order;
import Controller.Product;
import Model.OrderRepository;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author AbdelRahman Badran , Madoma Diallo
 */
public class OrderInformation extends javax.swing.JFrame {
    Order order = new Order();
    DefaultTableModel orderInfo = new DefaultTableModel();
    private Customer customerWithOrder = new Customer(), oldCustomerProfile;
    private Product productBeforeReject = new Product(), productAfterReject;
    private OrderRepository orderRepo = new OrderRepository();

    /**
     * Creates new form OrderInformation
     * @param customerWithOrder
     */
    public OrderInformation(Order orderSelected, Customer customerWithOrder) {
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        this.customerWithOrder = customerWithOrder;
        oldCustomerProfile = customerWithOrder.copyOfCustomer();

        initComponents();
        orderInfo = (DefaultTableModel) orderItemsTbl.getModel();
        order = orderSelected;
        orderIdFld.setText(Integer.toString(order.getOrderID()));
        customerNameFld.setText(orderSelected.getCustomerName());
        totalAmountFld.setText(Double.toString(order.getTotalOrderCost()));
        dateFld.setText(order.getOrderDate());
        shippingAddressFld.setText(customerWithOrder.getAddress());
        loadOrderItems();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        orderIndoPanel = new javax.swing.JPanel();
        orderTableLbl = new javax.swing.JLabel();
        acceptOrderBtn = new javax.swing.JButton();
        rejectOrderBtn = new javax.swing.JButton();
        totalAmountLbl = new javax.swing.JLabel();
        orderIdLbl = new javax.swing.JLabel();
        customerNameLbl = new javax.swing.JLabel();
        customerNameFld = new javax.swing.JTextField();
        totalAmountFld = new javax.swing.JTextField();
        orderIdFld = new javax.swing.JTextField();
        orderItemScrl = new javax.swing.JScrollPane();
        orderItemsTbl = new javax.swing.JTable();
        orderInfoUpPanel = new javax.swing.JPanel();
        orderInfoIcon = new javax.swing.JButton();
        orderInfoLbl = new javax.swing.JLabel();
        dateLbl = new javax.swing.JLabel();
        shippingAddressLbl = new javax.swing.JLabel();
        shippingAddressFld = new javax.swing.JTextField();
        dateFld = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        orderIndoPanel.setBackground(new java.awt.Color(255, 255, 255));
        orderIndoPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        orderTableLbl.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        orderTableLbl.setForeground(new java.awt.Color(102, 102, 102));
        orderTableLbl.setText("Order items");
        orderIndoPanel.add(orderTableLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 120, -1, -1));

        acceptOrderBtn.setBackground(new java.awt.Color(0, 153, 102));
        acceptOrderBtn.setForeground(new java.awt.Color(255, 255, 255));
        acceptOrderBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProductImages/icons8-ok-48.png"))); // NOI18N
        acceptOrderBtn.setText("Accept");
        acceptOrderBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        acceptOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptOrderBtnActionPerformed(evt);
            }
        });
        orderIndoPanel.add(acceptOrderBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 420, 155, -1));

        rejectOrderBtn.setBackground(new java.awt.Color(255, 51, 51));
        rejectOrderBtn.setForeground(new java.awt.Color(255, 255, 255));
        rejectOrderBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProductImages/icons8-cancel-48.png"))); // NOI18N
        rejectOrderBtn.setText("Reject");
        rejectOrderBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rejectOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectOrderBtnActionPerformed(evt);
            }
        });
        orderIndoPanel.add(rejectOrderBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 420, 165, 60));

        totalAmountLbl.setText("Total Amount");
        orderIndoPanel.add(totalAmountLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, -1, -1));

        orderIdLbl.setText("Order ID");
        orderIndoPanel.add(orderIdLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, -1));

        customerNameLbl.setText("Customer Name");
        orderIndoPanel.add(customerNameLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, -1, -1));

        customerNameFld.setEditable(false);
        orderIndoPanel.add(customerNameFld, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 200, 200, -1));

        totalAmountFld.setEditable(false);
        orderIndoPanel.add(totalAmountFld, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 300, 200, -1));

        orderIdFld.setEditable(false);
        orderIdFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderIdFldActionPerformed(evt);
            }
        });
        orderIndoPanel.add(orderIdFld, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, 200, -1));

        orderItemsTbl.setAutoCreateRowSorter(true);
        orderItemsTbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        orderItemsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        orderItemsTbl.setGridColor(new java.awt.Color(255, 255, 255));
        orderItemsTbl.setSelectionForeground(new java.awt.Color(255, 255, 255));
        orderItemScrl.setViewportView(orderItemsTbl);

        orderIndoPanel.add(orderItemScrl, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 150, 530, 230));

        orderInfoUpPanel.setBackground(new java.awt.Color(51, 0, 51));
        orderInfoUpPanel.setForeground(new java.awt.Color(51, 0, 51));
        orderInfoUpPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        orderInfoIcon.setBackground(new java.awt.Color(51, 0, 51));
        orderInfoIcon.setForeground(new java.awt.Color(51, 0, 51));
        orderInfoIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProductImages/icons8-open-box-48 (1).png"))); // NOI18N
        orderInfoIcon.setBorderPainted(false);
        orderInfoIcon.setContentAreaFilled(false);
        orderInfoIcon.setFocusPainted(false);
        orderInfoIcon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderInfoIconActionPerformed(evt);
            }
        });
        orderInfoUpPanel.add(orderInfoIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 70, 50));

        orderInfoLbl.setBackground(new java.awt.Color(51, 0, 51));
        orderInfoLbl.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        orderInfoLbl.setForeground(new java.awt.Color(255, 255, 255));
        orderInfoLbl.setText("Order Information");
        orderInfoLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        orderInfoUpPanel.add(orderInfoLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, -1, 33));

        orderIndoPanel.add(orderInfoUpPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 90));

        dateLbl.setText("Order Date");
        orderIndoPanel.add(dateLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, -1, -1));

        shippingAddressLbl.setText("Shipping Address");
        orderIndoPanel.add(shippingAddressLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, -1, -1));

        shippingAddressFld.setEditable(false);
        orderIndoPanel.add(shippingAddressFld, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 250, 200, -1));

        dateFld.setEditable(false);
        orderIndoPanel.add(dateFld, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 350, 200, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(orderIndoPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(orderIndoPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private String changeOrderStatusTo(String status){
        String orderLine = "";
        if (status.equals("Accepted")) {
            order.setOrderStatus("Accepted");

            String orderAccepted = Integer.toString(order.getOrderID()) + ":" + order.getSummaryOrderProductInfo().toString() + ":" + order.getCustomerName() + ":" +
                    order.getOrderStatus() + ":" + Double.toString(order.getTotalOrderCost()) + ":" + order.getOrderDate();
            orderLine = orderAccepted;

        } else if(status.equals("Rejected")){
            order.setOrderStatus("Rejected");

            String orderRejected = Integer.toString(order.getOrderID()) + ":" + order.getSummaryOrderProductInfo().toString() + ":" + order.getCustomerName() + ":" +
                    order.getOrderStatus() + ":" + Double.toString(order.getTotalOrderCost()) + ":" + order.getOrderDate();

            orderLine = orderRejected;
        }
        return orderLine;
    }

    private void acceptOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptOrderBtnActionPerformed
        try {

            String prevOrderLine = orderRepo.getLineWithOrderID(order.getOrderID());
            String orderLine =changeOrderStatusTo("Accepted");

            orderRepo.adminOrderReply(prevOrderLine, orderLine);
            JOptionPane.showMessageDialog(null, "Order Accepted!");
            this.dispose();
        } catch (IOException ex) {
            Logger.getLogger(OrderInformation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_acceptOrderBtnActionPerformed

    private void orderIdFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderIdFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderIdFldActionPerformed

    private void orderInfoIconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderInfoIconActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderInfoIconActionPerformed

    private void rejectOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectOrderBtnActionPerformed

         try {

            String prevOrderLine = orderRepo.getLineWithOrderID(order.getOrderID());
            String orderLine = changeOrderStatusTo("Rejected");

            orderRepo.adminOrderReply(prevOrderLine, orderLine);
            returnCustomerFunds();
            replenishProductsQuantity();
            JOptionPane.showMessageDialog(null, "Order Rejected!");
            this.dispose();
        } catch (IOException ex) {
            Logger.getLogger(OrderInformation.class.getName()).log(Level.SEVERE, null, ex);
        }

               /*
               change not reviewed to rejected
               transfer customerfunds back to customer
               transfer product quantity to product
               */
    }//GEN-LAST:event_rejectOrderBtnActionPerformed
    private void returnCustomerFunds(){
        try {
            double currentFunds = customerWithOrder.getFunds();
            double amountToReturn = order.getTotalOrderCost();
            currentFunds += amountToReturn;
            customerWithOrder.setFunds(currentFunds);
            oldCustomerProfile.updateProfile(oldCustomerProfile, customerWithOrder);
        } catch (IOException ex) {
            Logger.getLogger(OrderInformation.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void replenishProductsQuantity() throws IOException{
         ArrayList<String> items = order.getSummaryOrderProductInfo();
         String[] products, quantityAndItem;
         String currentProduct;
         for(int i =0; i<items.size(); i++){
            products = items.get(i).split(",");
            for(int z =0; z < products.length; z++) {
                currentProduct = products[z];
                quantityAndItem = currentProduct.trim().split(" ", 2);
                
                //search for the product with this name
                productBeforeReject = productBeforeReject.searchProductInformation(quantityAndItem[1]);//name
                productAfterReject = productBeforeReject.copyOfProduct();
                int currentQunatity= productBeforeReject.getQuantity();
                int quantityToReplenish = Integer.parseInt(quantityAndItem[0]); //quantity
                currentQunatity += quantityToReplenish;
                
                productAfterReject.setQuantity(currentQunatity);
                productBeforeReject.updateProduct(productBeforeReject, productAfterReject);
            }

         }
    }

    private void loadOrderItems(){

        ArrayList<String> items = order.getSummaryOrderProductInfo();

        String[] products, quantityAndItem;
        String currentProduct;

       for(int i =0; i<items.size(); i++){
           products = items.get(i).split(",");

           for(int z =0; z < products.length; z++) {
               currentProduct = products[z];
               quantityAndItem = currentProduct.trim().split(" ", 2);
               String[] row = new String[2];
               row[0] = quantityAndItem[1];
               row[1] = quantityAndItem[0];
               orderInfo.addRow(row);
        }
    }
}
    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptOrderBtn;
    private javax.swing.JTextField customerNameFld;
    private javax.swing.JLabel customerNameLbl;
    private javax.swing.JTextField dateFld;
    private javax.swing.JLabel dateLbl;
    private javax.swing.JTextField orderIdFld;
    private javax.swing.JLabel orderIdLbl;
    private javax.swing.JPanel orderIndoPanel;
    private javax.swing.JButton orderInfoIcon;
    private javax.swing.JLabel orderInfoLbl;
    private javax.swing.JPanel orderInfoUpPanel;
    private javax.swing.JScrollPane orderItemScrl;
    private javax.swing.JTable orderItemsTbl;
    private javax.swing.JLabel orderTableLbl;
    private javax.swing.JButton rejectOrderBtn;
    private javax.swing.JTextField shippingAddressFld;
    private javax.swing.JLabel shippingAddressLbl;
    private javax.swing.JTextField totalAmountFld;
    private javax.swing.JLabel totalAmountLbl;
    // End of variables declaration//GEN-END:variables
}
